package com.example.clinifyauthorization.persistence.entity;// default package
// Generated 16 Jun 2023, 20:42:23 by Hibernate Tools 6.1.7.Final


import jakarta.persistence.*;

import java.util.HashSet;
import java.util.Set;

/**
 * Doctor generated by hbm2java
 */
@Entity
@Table(name="doctor"
    ,catalog="clinify"
    , uniqueConstraints = @UniqueConstraint(columnNames="phone_number") 
)
public class Doctor extends BaseEntity {
     private DoctorTitle doctorTitle;
     private Clinic clinic;
     private DoctorSpecialization doctorSpecialization;
     private String fullName;
     private String phoneNumber;
     private int ticketPrice;
     private Double averageRating;
     private Integer ratingCount;
     private String status;
     private Boolean isDeleted;
     private Set<Appointment> appointments = new HashSet(0);

    public Doctor() {
    }

	
    public Doctor(DoctorTitle doctorTitle, Clinic clinic, DoctorSpecialization doctorSpecialization, String fullName, String phoneNumber, int ticketPrice) {
        this.doctorTitle = doctorTitle;
        this.clinic = clinic;
        this.doctorSpecialization = doctorSpecialization;
        this.fullName = fullName;
        this.phoneNumber = phoneNumber;
        this.ticketPrice = ticketPrice;
    }
    public Doctor(DoctorTitle doctorTitle, Clinic clinic, DoctorSpecialization doctorSpecialization, String fullName, String phoneNumber, int ticketPrice, Double averageRating, Integer ratingCount, String status, Boolean isDeleted, Set<Appointment> appointments) {
       this.doctorTitle = doctorTitle;
       this.clinic = clinic;
       this.doctorSpecialization = doctorSpecialization;
       this.fullName = fullName;
       this.phoneNumber = phoneNumber;
       this.ticketPrice = ticketPrice;
       this.averageRating = averageRating;
       this.ratingCount = ratingCount;
       this.status = status;
       this.isDeleted = isDeleted;
       this.appointments = appointments;
    }
   


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="title_id", nullable=false)
    public DoctorTitle getDoctorTitle() {
        return this.doctorTitle;
    }
    
    public void setDoctorTitle(DoctorTitle doctorTitle) {
        this.doctorTitle = doctorTitle;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="clinic_id", nullable=false)
    public Clinic getClinic() {
        return this.clinic;
    }
    
    public void setClinic(Clinic clinic) {
        this.clinic = clinic;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="specialization_id", nullable=false)
    public DoctorSpecialization getDoctorSpecialization() {
        return this.doctorSpecialization;
    }
    
    public void setDoctorSpecialization(DoctorSpecialization doctorSpecialization) {
        this.doctorSpecialization = doctorSpecialization;
    }

    
    @Column(name="full_name", nullable=false, length=200)
    public String getFullName() {
        return this.fullName;
    }
    
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    
    @Column(name="phone_number", unique=true, nullable=false, length=11)
    public String getPhoneNumber() {
        return this.phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    
    @Column(name="ticket_price", nullable=false)
    public int getTicketPrice() {
        return this.ticketPrice;
    }
    
    public void setTicketPrice(int ticketPrice) {
        this.ticketPrice = ticketPrice;
    }

    
    @Column(name="average_rating", precision=22, scale=0)
    public Double getAverageRating() {
        return this.averageRating;
    }
    
    public void setAverageRating(Double averageRating) {
        this.averageRating = averageRating;
    }

    
    @Column(name="rating_count")
    public Integer getRatingCount() {
        return this.ratingCount;
    }
    
    public void setRatingCount(Integer ratingCount) {
        this.ratingCount = ratingCount;
    }

    
    @Column(name="status", length=8)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    
    @Column(name="is_deleted")
    public Boolean getIsDeleted() {
        return this.isDeleted;
    }
    
    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="doctor")
    public Set<Appointment> getAppointments() {
        return this.appointments;
    }
    
    public void setAppointments(Set<Appointment> appointments) {
        this.appointments = appointments;
    }




}


